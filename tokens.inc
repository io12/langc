// This file contains token information in a format parsable by C macros

TOK(INVALID_TOK, "invalid token")
TOK(LET, "`let`")
TOK(VAR, "`var`")
TOK(IMPURE, "`impure`")
TOK(CONST, "`const`")
TOK(VOLATILE, "`volatile`")
TOK(IDENT, "an identifier")
TOK(TYPEDEF, "`typedef`")
TOK(TRUE, "`true`")
TOK(FALSE, "`false`")
TOK(INT_LIT, "an integer literal")
TOK(FLOAT_LIT, "a floating point literal")
TOK(CHAR_LIT, "a character literal")
TOK(STRING_LIT, "a string literal")
TOK(PLUS_PLUS, "`++`")
TOK(MINUS_MINUS, "`--`")
TOK(PLUS, "`+`")
TOK(MINUS, "`-`")
TOK(STAR, "`*`")
TOK(SLASH, "`/`")
TOK(PERCENT, "`%`")
TOK(LT, "`<`")
TOK(GT, "`>`")
TOK(LT_EQ, "`<=`")
TOK(GT_EQ, "`>=`")
TOK(EQ_EQ, "`==`")
TOK(BANG_EQ, "`!=`")
TOK(AMP, "`&`")
TOK(PIPE, "`|`")
TOK(CARET, "`^`")
TOK(TILDE, "`-`")
TOK(LT_LT, "`<<`")
TOK(GT_GT, "`>>`")
TOK(AMP_AMP, "`&&`")
TOK(PIPE_PIPE, "`||`")
TOK(BANG, "`!`")
TOK(EQ, "`=`")
TOK(PLUS_EQ, "`+=`")
TOK(MINUS_EQ, "`-=`")
TOK(STAR_EQ, "`*=`")
TOK(SLASH_EQ, "`/=`")
TOK(PERCENT_EQ, "`%=`")
TOK(AMP_EQ, "`&=`")
TOK(PIPE_EQ, "`|=`")
TOK(CARET_EQ, "`^=`")
TOK(LT_LT_EQ, "`<<=`")
TOK(GT_GT_EQ, "`>>=`")
TOK(IF, "`if`")
TOK(THEN, "`then`")
TOK(ELSE, "`else`")
TOK(DO, "`do`")
TOK(WHILE, "`while`")
TOK(FOR, "`for`")
TOK(SWITCH, "`switch`")
TOK(BREAK, "`break`")
TOK(CONTINUE, "`continue`")
TOK(DEFER, "`defer`")
TOK(RETURN, "`return`")
TOK(U8, "`U8`")
TOK(U16, "`U16`")
TOK(U32, "`U32`")
TOK(U64, "`U64`")
TOK(I8, "`I8`")
TOK(I16, "`I16`")
TOK(I32, "`I32`")
TOK(I64, "`I64`")
TOK(F32, "`F32`")
TOK(F64, "`F64`")
TOK(BOOL, "`bool`")
TOK(VOID, "`void`")
TOK(CHAR, "`char`")
TOK(DOT, "`.`")
TOK(COLON, "`:`")
TOK(SEMICOLON, "`;`")
TOK(COMMA, "`,`")
TOK(ARROW, "`->`")
TOK(BACK_ARROW, "`<-`")
TOK(BIG_ARROW, "`=>`")
TOK(BACKSLASH, "`\\`")
TOK(UNDERSCORE, "`_`")
TOK(OPEN_BRACKET, "`[`")
TOK(CLOSE_BRACKET, "`]`")
TOK(OPEN_PAREN, "`(`")
TOK(CLOSE_PAREN, "`)`")
TOK(OPEN_BRACE, "`{`")
TOK(CLOSE_BRACE, "`}`")
TOK(TEOF, "end of file")
